input {
  beats {
    port => 5044
  }
  tcp {
    port => 5000
    codec => json
  }
  udp {
    port => 5000
    codec => json
  }
  http {
    port => 5044
    codec => json
  }
}

filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
  
  if [type] == "firewall" {
    grok {
      match => { "message" => "%{IP:src_ip} %{IP:dst_ip} %{WORD:action} %{WORD:protocol} %{INT:src_port} %{INT:dst_port}" }
    }
  }
  
  if [type] == "ids" {
    grok {
      match => { "message" => "\[%{DATA:timestamp}\] %{IP:src_ip}:%{INT:src_port} -> %{IP:dst_ip}:%{INT:dst_port} %{WORD:alert_type} %{GREEDYDATA:description}" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "soc-logs-%{+YYYY.MM.dd}"
  }
  stdout { codec => rubydebug }
} 